


SHOW DATABASES;
use sakila;

SELECT * FROM actor;

SELECT last_name 
  FROM actor a1
 WHERE EXISTS (SELECT * FROM actor a2 
 WHERE a1.last_name = a1.last_name 
 AND a1.actor_id <> a2.actor_id);

SELECT * FROM actor a, film_actor fa 
WHERE NOT EXISTS (SELECT a.actor_id = fa.actor_id);


SELECT c1.customer_id, c1.last_name, c1.first_name FROM customer c1
WHERE (SELECT COUNT(r1.customer_id) FROM rental r1 HAVING COUNT(r1.customer_id)=1);


SELECT c1.customer_id, c1.last_name, c1.first_name FROM customer c1
WHERE (SELECT COUNT(r1.customer_id) FROM rental r1 HAVING COUNT(r1.customer_id) > 1);



SELECT a.first_name, a.last_name FROM actor a, film_actor fa, film f 
WHERE a.actor_id = fa.actor_id AND f.film_id = fa.film_id 
AND f.title = "BETRAYED REAR" OR f.title = "CATCH AMISTAD"


                 
     
SELECT a.first_name, a.last_name FROM actor a
WHERE a.actor_id IN 
(SELECT fa.actor_id FROM film_actor fa
WHERE fa.film_id IN (SELECT f.film_id 
FROM film f
WHERE f.title = "BETRAYED REAR" 
OR f.title = "CATCH AMISTAD"));
  
  
SELECT a.first_name, a.last_name FROM actor a
WHERE a.actor_id IN 
(SELECT fa.actor_id FROM film_actor fa
WHERE fa.film_id IN (SELECT f.film_id 
FROM film f
WHERE f.title = "BETRAYED REAR" 
AND NOT f.title = "CATCH AMISTAD"));



SELECT a.first_name, a.last_name FROM actor a
WHERE a.actor_id NOT IN 
(SELECT fa.actor_id FROM film_actor fa
WHERE fa.film_id IN (SELECT f.film_id 
FROM film f
WHERE f.title LIKE "BETRAYED REAR"))
AND a.actor_id NOT IN 
(SELECT fa.actor_id FROM film_actor fa
WHERE fa.film_id IN (SELECT f.film_id 
FROM film f
WHERE f.title LIKE "CATCH AMISTAD"));

